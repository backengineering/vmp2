# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

project(vmassembler)

# Target: vmassembler
set(vmassembler_SOURCES
	cmake.toml
	"include/compiler.hpp"
	"include/gen_code.hpp"
	"include/parser.hpp"
	"src/compiler.cpp"
	"src/lexer.flex.cpp"
	"src/lexer.l"
	"src/main.cpp"
	"src/parser.cpp"
	"src/parser.tab.cpp"
	"src/parser.tab.h"
	"src/parser.y"
)

add_executable(vmassembler)

target_sources(vmassembler PRIVATE ${vmassembler_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${vmassembler_SOURCES})

target_compile_definitions(vmassembler PRIVATE
	NOMINMAX
	_UNICODE
)

target_compile_features(vmassembler PRIVATE
	cxx_std_20
)

target_include_directories(vmassembler PRIVATE
	include
	src
)

target_link_libraries(vmassembler PRIVATE
	vmprofiler
	xtils
	cli-parser
	linux-pe
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT vmassembler)
endif()
